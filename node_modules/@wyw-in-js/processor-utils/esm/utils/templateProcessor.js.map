{"version":3,"file":"templateProcessor.js","names":["hasEvalMeta","ValueType","getVariableName","stripLines","throwIfInvalid","toCSS","isCSSable","units","unitRegex","RegExp","join","templateProcessor","tagProcessor","template","valueCache","variableNameConfig","sourceMapReplacements","isReferenced","cssText","item","shift","value","cooked","ex","end","start","loc","beforeLength","length","next","line","column","get","name","kind","FUNCTION","matches","match","unit","varId","addInterpolation","source","substring","e","Error","buildCodeFrameError","message","isValidValue","bind","undefined","__wyw_meta","className","push","original","rules","extractRules","location","includes"],"sources":["../../src/utils/templateProcessor.ts"],"sourcesContent":["/* eslint-disable no-continue */\n/**\n * This file handles transforming template literals to class names or styled components and generates CSS content.\n * It uses CSS code from template literals and evaluated values of lazy dependencies stored in ValueCache.\n */\n\nimport type { TemplateElement } from '@babel/types';\n\nimport type { ExpressionValue, Replacements } from '@wyw-in-js/shared';\nimport { hasEvalMeta, ValueType } from '@wyw-in-js/shared';\n\nimport type { TaggedTemplateProcessor } from '../TaggedTemplateProcessor';\nimport type { ValueCache, Rules } from '../types';\n\nimport { getVariableName } from './getVariableName';\nimport stripLines from './stripLines';\nimport throwIfInvalid from './throwIfInvalid';\nimport toCSS, { isCSSable } from './toCSS';\nimport type { IOptions } from './types';\nimport { units } from './units';\n\n// Match any valid CSS units followed by a separator such as ;, newline etc.\nconst unitRegex = new RegExp(`^(?:${units.join('|')})\\\\b`);\n\nexport default function templateProcessor(\n  tagProcessor: TaggedTemplateProcessor,\n  [...template]: (TemplateElement | ExpressionValue)[],\n  valueCache: ValueCache,\n  variableNameConfig: IOptions['variableNameConfig'] | undefined\n): [rules: Rules, sourceMapReplacements: Replacements] | null {\n  const sourceMapReplacements: Replacements = [];\n  // Check if the variable is referenced anywhere for basic DCE\n  // Only works when it's assigned to a variable\n  const { isReferenced } = tagProcessor;\n\n  // Serialize the tagged template literal to a string\n  let cssText = '';\n\n  let item: TemplateElement | ExpressionValue | undefined;\n  // eslint-disable-next-line no-cond-assign\n  while ((item = template.shift())) {\n    if ('type' in item) {\n      // It's a template element\n      cssText += item.value.cooked;\n      continue;\n    }\n\n    // It's an expression\n    const { ex } = item;\n\n    const { end, start } = ex.loc!;\n    const beforeLength = cssText.length;\n\n    // The location will be end of the current string to start of next string\n    const next = template[0] as TemplateElement; // template[0] is the next template element\n    const loc = {\n      start,\n      end: next\n        ? { line: next.loc!.start.line, column: next.loc!.start.column }\n        : { line: end.line, column: end.column + 1 },\n    };\n\n    const value = 'value' in item ? item.value : valueCache.get(item.ex.name);\n\n    // Is it props based interpolation?\n    if (item.kind === ValueType.FUNCTION || typeof value === 'function') {\n      // Check if previous expression was a CSS variable that we replaced\n      // If it has a unit after it, we need to move the unit into the interpolation\n      // e.g. `var(--size)px` should actually be `var(--size)`\n      // So we check if the current text starts with a unit, and add the unit to the previous interpolation\n      // Another approach would be `calc(var(--size) * 1px), but some browsers don't support all units\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=956573\n      const matches = next.value.cooked?.match(unitRegex);\n\n      try {\n        if (matches) {\n          template.shift();\n          const [unit] = matches;\n\n          const varId = tagProcessor.addInterpolation(\n            item.ex,\n            cssText,\n            item.source,\n            unit\n          );\n          cssText += getVariableName(varId, variableNameConfig);\n\n          cssText += next.value.cooked?.substring(unit?.length ?? 0) ?? '';\n        } else {\n          const varId = tagProcessor.addInterpolation(\n            item.ex,\n            cssText,\n            item.source\n          );\n          cssText += getVariableName(varId, variableNameConfig);\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          throw item.buildCodeFrameError(e.message);\n        }\n\n        throw e;\n      }\n    } else {\n      throwIfInvalid(\n        tagProcessor.isValidValue.bind(tagProcessor),\n        value,\n        item,\n        item.source\n      );\n\n      if (value !== undefined && typeof value !== 'function') {\n        // Skip the blank string instead of throw ing an error\n        if (value === '') {\n          continue;\n        }\n\n        if (hasEvalMeta(value)) {\n          // If it's a React component wrapped in styled, get the class name\n          // Useful for interpolating components\n          cssText += `.${value.__wyw_meta.className}`;\n        } else if (isCSSable(value)) {\n          // If it's a plain object or an array, convert it to a CSS string\n          cssText += stripLines(loc, toCSS(value));\n        } else {\n          // For anything else, assume it'll be stringified\n          cssText += stripLines(loc, value);\n        }\n\n        sourceMapReplacements.push({\n          original: loc,\n          length: cssText.length - beforeLength,\n        });\n      }\n    }\n  }\n\n  const rules = tagProcessor.extractRules(\n    valueCache,\n    cssText,\n    tagProcessor.location\n  );\n\n  // tagProcessor.doRuntimeReplacement(classes);\n  if (!isReferenced && !cssText.includes(':global')) {\n    return null;\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  return [rules, sourceMapReplacements];\n}\n"],"mappings":"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"}
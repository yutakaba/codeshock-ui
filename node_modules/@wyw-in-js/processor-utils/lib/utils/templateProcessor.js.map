{"version":3,"file":"templateProcessor.js","names":["_shared","require","_getVariableName","_stripLines","_interopRequireDefault","_throwIfInvalid","_toCSS","_interopRequireWildcard","_units","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","obj","unitRegex","RegExp","units","join","templateProcessor","tagProcessor","template","valueCache","variableNameConfig","sourceMapReplacements","isReferenced","cssText","item","shift","value","cooked","ex","end","start","loc","beforeLength","length","next","line","column","name","kind","ValueType","FUNCTION","_next$value$cooked","matches","match","_next$value$cooked$su","_next$value$cooked2","_unit$length","unit","varId","addInterpolation","source","getVariableName","substring","Error","buildCodeFrameError","message","throwIfInvalid","isValidValue","bind","undefined","hasEvalMeta","__wyw_meta","className","isCSSable","stripLines","toCSS","push","original","rules","extractRules","location","includes"],"sources":["../../src/utils/templateProcessor.ts"],"sourcesContent":["/* eslint-disable no-continue */\n/**\n * This file handles transforming template literals to class names or styled components and generates CSS content.\n * It uses CSS code from template literals and evaluated values of lazy dependencies stored in ValueCache.\n */\n\nimport type { TemplateElement } from '@babel/types';\n\nimport type { ExpressionValue, Replacements } from '@wyw-in-js/shared';\nimport { hasEvalMeta, ValueType } from '@wyw-in-js/shared';\n\nimport type { TaggedTemplateProcessor } from '../TaggedTemplateProcessor';\nimport type { ValueCache, Rules } from '../types';\n\nimport { getVariableName } from './getVariableName';\nimport stripLines from './stripLines';\nimport throwIfInvalid from './throwIfInvalid';\nimport toCSS, { isCSSable } from './toCSS';\nimport type { IOptions } from './types';\nimport { units } from './units';\n\n// Match any valid CSS units followed by a separator such as ;, newline etc.\nconst unitRegex = new RegExp(`^(?:${units.join('|')})\\\\b`);\n\nexport default function templateProcessor(\n  tagProcessor: TaggedTemplateProcessor,\n  [...template]: (TemplateElement | ExpressionValue)[],\n  valueCache: ValueCache,\n  variableNameConfig: IOptions['variableNameConfig'] | undefined\n): [rules: Rules, sourceMapReplacements: Replacements] | null {\n  const sourceMapReplacements: Replacements = [];\n  // Check if the variable is referenced anywhere for basic DCE\n  // Only works when it's assigned to a variable\n  const { isReferenced } = tagProcessor;\n\n  // Serialize the tagged template literal to a string\n  let cssText = '';\n\n  let item: TemplateElement | ExpressionValue | undefined;\n  // eslint-disable-next-line no-cond-assign\n  while ((item = template.shift())) {\n    if ('type' in item) {\n      // It's a template element\n      cssText += item.value.cooked;\n      continue;\n    }\n\n    // It's an expression\n    const { ex } = item;\n\n    const { end, start } = ex.loc!;\n    const beforeLength = cssText.length;\n\n    // The location will be end of the current string to start of next string\n    const next = template[0] as TemplateElement; // template[0] is the next template element\n    const loc = {\n      start,\n      end: next\n        ? { line: next.loc!.start.line, column: next.loc!.start.column }\n        : { line: end.line, column: end.column + 1 },\n    };\n\n    const value = 'value' in item ? item.value : valueCache.get(item.ex.name);\n\n    // Is it props based interpolation?\n    if (item.kind === ValueType.FUNCTION || typeof value === 'function') {\n      // Check if previous expression was a CSS variable that we replaced\n      // If it has a unit after it, we need to move the unit into the interpolation\n      // e.g. `var(--size)px` should actually be `var(--size)`\n      // So we check if the current text starts with a unit, and add the unit to the previous interpolation\n      // Another approach would be `calc(var(--size) * 1px), but some browsers don't support all units\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=956573\n      const matches = next.value.cooked?.match(unitRegex);\n\n      try {\n        if (matches) {\n          template.shift();\n          const [unit] = matches;\n\n          const varId = tagProcessor.addInterpolation(\n            item.ex,\n            cssText,\n            item.source,\n            unit\n          );\n          cssText += getVariableName(varId, variableNameConfig);\n\n          cssText += next.value.cooked?.substring(unit?.length ?? 0) ?? '';\n        } else {\n          const varId = tagProcessor.addInterpolation(\n            item.ex,\n            cssText,\n            item.source\n          );\n          cssText += getVariableName(varId, variableNameConfig);\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          throw item.buildCodeFrameError(e.message);\n        }\n\n        throw e;\n      }\n    } else {\n      throwIfInvalid(\n        tagProcessor.isValidValue.bind(tagProcessor),\n        value,\n        item,\n        item.source\n      );\n\n      if (value !== undefined && typeof value !== 'function') {\n        // Skip the blank string instead of throw ing an error\n        if (value === '') {\n          continue;\n        }\n\n        if (hasEvalMeta(value)) {\n          // If it's a React component wrapped in styled, get the class name\n          // Useful for interpolating components\n          cssText += `.${value.__wyw_meta.className}`;\n        } else if (isCSSable(value)) {\n          // If it's a plain object or an array, convert it to a CSS string\n          cssText += stripLines(loc, toCSS(value));\n        } else {\n          // For anything else, assume it'll be stringified\n          cssText += stripLines(loc, value);\n        }\n\n        sourceMapReplacements.push({\n          original: loc,\n          length: cssText.length - beforeLength,\n        });\n      }\n    }\n  }\n\n  const rules = tagProcessor.extractRules(\n    valueCache,\n    cssText,\n    tagProcessor.location\n  );\n\n  // tagProcessor.doRuntimeReplacement(classes);\n  if (!isReferenced && !cssText.includes(':global')) {\n    return null;\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  return [rules, sourceMapReplacements];\n}\n"],"mappings":"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"}